# 리스트와 튜플
## 리스트 : 1개 이상의 연속된 값들의 묶음
'''
지금까지 배운 변수와 다른 값들 -> 값을 한 개씩 다뤘음
'''
a = 10
b = 20
print(a, b)

# 30개의 숫자를 저장 (1~30)
'''
a1 = 1
a2 = 2
...
a30 = 30
'''

# 리스트(List) : 목록 -> 값을 일렬로 (순서가 있게) 늘어놓은 형태

# 리스트 만들기
'''
* 변수에 값을 저장할 때 [ ](대괄호)로 묶어주면 리스트가 됨. 각 값은 ,(콤마)로 구분
* 리스트 = [값1, 값2, ...]
'''
fruits = ["사과", "배", "귤"]
print(fruits)
numbers = [10, 40, 27]
print(numbers)

# 리스트에 여러 가지 자료형 저장
teacher = ["김강사", 180, 70.9, True]  # 리스트-나열 -> 다 같은 타입이 되도록 제한.
print(teacher) # 파이썬에서의 리스트는 여러 가지 자료형(타입)들을 편하게 넣을 수 있음.

# 빈 리스트 만들기
'''
* 빈 리스트를 만들 때는 [ ] 만 사용하거나, list()를 사용하면 됨.
* 리스트 = []
* 리스트 = list()
'''
a = []
print("a :", a)
b = list()
print("b :", b)

# range를 사용하여 리스트 만들기
'''
range는 연속된 숫자를 생성하는 기능
range(10) # 시작은 0부터 하고, 끝은 입력한 값 직전. (10->9)
0 ~ 9까지의 수의 나열
'''
print(range(10)) # range(n) : 0부터 n 직전까지의 숫자를 생성
# range(0, 10) <- 앞으로 사용 예정일 range로 대기 상태.
print(list(range(10))) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# 수를 나열한 리스트를 만들 때
# 리스트 = list(range(횟수)) : 횟수 -> 횟수 - 1의 값까지 숫자를 만들겠다 (0부터 시작해서)

# 시작점과 끝점이 모두 있는 range
r = range(8, 14) # range(시작점, 끝점) : 시작점으로부터 시작하고, 끝점-1까지 반복되는 정수들의 집합
print(r)
print(list(r)) # 8~13까지 연속되는 정수의 리스트를 가지고 싶다?? range(8, 13+1=14) => range(8, 14) => list(...)
# 시작점(포함), 끝점(포함X)

# 시작점, 끝점, 증가폭 range
r2 = range(100, 1000, 100)  # list(range(시작, 끝, 증가폭)) => 증가폭만큼 늘어나면서 숫자 리스트를 생성
print(r2)
print(list(r2)) # [100, 200, 300, 400, 500, 600, 700, 800, 900]
print(list(range(100, 950, 100))) # 끝점을 초과하면 멈추는 개념.

r3 = range(1000, 100, -100) # 증가폭은 음수를 쓸 수 있다
print(list(r3))
r4 = range(1000, 99, -100) # 증가폭은 음수를 쓸 수 있다
print(list(r4))

# 튜플 (tuple)
'''
* 리스트처럼 요소(원소, element)들이 있다
* 튜플은 요소를 수정할 수 없음. 읽기 전용 (read-only)
* 리스트가 []라면, 튜플은 ()입니다. -> 각 값은 ,(콤마, 쉼표)로 구분.
* 변수 한 개에 => 여러 값을 (괄호 없이) ,로 구분해서 넣으면 => 역시나 튜플
* 튜플 = (값1, 값2, 값3..)
* 튜플 = 값1, 값2, 값3...
'''
# 숫자가 5개 들어있는 튜플
a1 = (23, 38, 12, 11, 7)
print("a1 :", a1)
a2 = 23, 38, 12, 11, 7
print("a2 :", a2)
a3 = "python", 123, 123.45, True
print("a3 :", a3) # 튜플도 리스트처럼 자료형의 혼합이 가능하다

# range를 사용해서 튜플 만들기
# list(...) => range => list
# tuple(...) => range => tuple
print(tuple(range(1, 100)))
# tuple(range(끝점))
# tuple(range(시작점, 끝점))
# tuple(range(시작점, 끝점, 증가폭))

# tuple을 list로 변환하고, list를 tuple로 변환하고 싶으면?
a = list(range(10)) # [0.... 9]
print(a)
b = tuple(a)
print(b) # (0....9)
c = tuple(range(5, 25, 5))
print(c)
d = list(c)
print(d)

# 리스트와 튜플로 변수 만들기
'''
* 리스트 또는 튜플을 사용하면 변수 여러 개를 한 번에 만들 수 있음
* 이 때 (만들려는) 변수의 개수와 리스트(튜플)의 요소 개수는 같아야 함
'''
l = [1, 2, 3]
a, b, c = l
print("a:", a, "b:", b, "c:", c)
t = ("dog", "cat", "cow", "bird")
d, e, f, g = t
print("d:", d, "e:", e, "f:", f, "g:", g)
d, e, f, g = ("dog", "cat", "cow", "bird") # d, e, f, g = t
d, e, f, g = "dog", "cat", "cow", "bird" # d, e, f, g = t
# 파이썬에서는 왼쪽 변수의 수와 오른쪽 값의 수가 맞으면 한 번에 변수에 값을 대입해줄 수 있다
# unpacking -> tuple unpacking

a, b, c = [1, 2, 3]  # 리스트를 분해해서 각각의 변수에 집어넣는것? : 리스트 언팩킹.

v = 10, 100, 1000 # 튜플 -> 묶어서 넣는 것 -> pack -> packing -> 튜플 패킹
l = [10, 100, 1000] # 리스트 패킹